@model Give_Pro.Models.PublisherProfile

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<h2 style="margin:0 50px 50px 0px">تعديل </h2>

@using (Html.BeginForm("Edit", "PublisherProfiles", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="alert alert-danger" id="error-div" style="display:none">
            <span id="View-err">

            </span>
        </div>
        <h4 style="margin:0 50px 50px 0px">الملف الشخصى </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.UserID)
        @Html.HiddenFor(model => model.CompLogo)
        @Html.HiddenFor(model => model.LegalPaper)

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberCard, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberCard, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.NumberCard, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateEnd, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateEnd, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.DateEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateBirth, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateBirth, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.DateBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberPhone, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberPhone, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.NumberPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountriesID, "CountriesID", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("CountriesID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.CountriesID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GovernoratesID, "GovernoratesID", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("GovernoratesID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.GovernoratesID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CitiesID, "CitiesID", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("CitiesID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.CitiesID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressDetails, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddressDetails, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.AddressDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyActivityID, "نشاط الشركة", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("CompanyActivityID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.CompanyActivityID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StaffSizeID, "حجم الشركة", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("StaffSizeID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.StaffSizeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ComRegistrationNo, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ComRegistrationNo, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.ComRegistrationNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WebSite, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WebSite, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.WebSite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TimesworkID, "ساعات العمل", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("TimesworkID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.TimesworkID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GroundNumber, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GroundNumber, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.GroundNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password", Type = "password", id = "Password", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--==============Start=Images===================-->
        <div class="form-group">
            @Html.LabelFor(model => model.CompLogo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <!-- كود إداة تحميل صورة من الجهاز -->
                <input type="file" name="upload" id="Image" />
                @Html.ValidationMessageFor(model => model.CompLogo, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--==============End=Images===================-->
        <div class="row" style="height:20px; width:100%"></div>
         <div class="form-group">
            @Html.LabelFor(model => model.LegalPaper, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="uploadLegalPaper" id="LegalPaper" />
                @Html.ValidationMessageFor(model => model.LegalPaper, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="تعـديل" class="btn btn-primary" id="Save" />
            </div>
        </div>
    </div>
}

<div style="width:100% ;height:75%">
    <a href="#" style="color:white">.</a>
</div>

@section scripts{
    <script>

         $(function () {
             $("#Save").click(function () {
                    /* نتحقق من ان الصورة فارغه */
                 if ($("#Password").val() == "") {
                     $("#error-div").fadeIn();
                     $("#View-err").append("  (برجاء ادخال كلمة السر)");
                     return false;
                 }

             });
        });
        $(function () {
            $("#Save").click(function () {
                if ($("#Image").val() != "") {

                    /* نحقق من ان اتمداد الصورة انه سليم */
                    var filename = document.getElementById("Image").value; // جلب امتداد الصورة كامل //
                    var extensionImg = filename.substr(filename.lastIndexOf('.') + 1); //تقطيع الامتداد من عند النقطه بدون النقطه
                    var validExtensions = ['jpg', 'png', 'gif', 'bmp'];
                    if ($.inArray(extensionImg, validExtensions) == -1) {
                        $("#error-div").fadeIn();
                        $("#View-err").append("رجاء قم بـ أختيار صورة بـ امتداد صحيح ");
                        return false;
                    }
                    /* التحكم ف حجم الصورة لا يزيد (2ميجا) فقط لا غير */
                    var myFileSize = document.getElementById("Image").files[0].size / 1024 / 1024; // جلب حجم الصورة ب المجيا بايت //
                    if (myFileSize > 2) {
                        $("#error-div").fadeIn();
                        $("#View-err").append("رجاء قم بـ إختيار صورة حجمها أقل من 2 ميجا بايت ");
                        return false;
                    }
                }
            });
        });
        $(function () {
            $("#Save").click(function () {              
                if ($("#LegalPaper").val() != "") {

                    /* نحقق من ان اتمداد الصورة انه سليم */
                    var filename = document.getElementById("LegalPaper").value; // جلب امتداد الصورة كامل //
                    var extensionImg = filename.substr(filename.lastIndexOf('.') + 1); //تقطيع الامتداد من عند النقطه بدون النقطه
                    var validExtensions = ['pdf'];
                    if ($.inArray(extensionImg, validExtensions) == -1) {
                        $("#error-div").fadeIn();
                        $("#View-err").append("رجاء قم بـ أختيار ملف بـ امتداد صحيح ");
                        return false;
                    }
                    /* التحكم ف حجم الصورة لا يزيد (2ميجا) فقط لا غير */
                    var myFileSize = document.getElementById("LegalPaper").files[0].size / 1024 / 1024; // جلب حجم الصورة ب المجيا بايت //
                    if (myFileSize > 10) {
                        $("#error-div").fadeIn();
                        $("#View-err").append("رجاء قم بـ إختيار ملف حجمه أقل من 10 ميجا بايت ");
                        return false;
                    }
                }
            });
        });
    </script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script>
            $(document).ready(function () {
                $("#CountriesID").change(function () {
                    var countryId = $(this).val();
                    debugger
                    $.ajax({
                        type: "post",
                        url: "/Jobs/GetGovernorates?id=" + countryId,
                        contentType: "html",
                        success: function (response) {
                            debugger
                            $("#GovernoratesID").empty();
                            $("#GovernoratesID").append(response);
                        }
                    });
                });
                $("#GovernoratesID").change(function () {
                    var cityId = $(this).val();
                    debugger
                    $.ajax({
                        type: "post",
                        url: "/Jobs/GetCities?id=" + cityId,
                        contentType: "html",
                        success: function (response) {
                            debugger
                            $("#CitiesID").empty();
                            $("#CitiesID").append(response);
                        }
                    });
                });
            });
    </script>
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

    <script src="~/Scripts/jquery-1.12.4.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script>
        /////////////////////////////// خاصة بتاريخ الانشاء //////////////////////////////////////////
        $(document).ready(function () {

            $("#DateEnd").datepicker({
                maxDate: new Date(),
                beforeShow: function (input, inst) {
                    // Handle calendar position before showing it.
                    // It's not supported by Datepicker itself (for now) so we need to use its internal variables.
                    var calendar = inst.dpDiv;

                    // Dirty hack, but we can't do anything without it (for now, in jQuery UI 1.8.20)
                    setTimeout(function () {
                        calendar.position({
                            my: 'right top',
                            at: 'right bottom',
                            collision: 'none',
                            of: input
                        });
                    }, 1);
                }
            });
            $("#DateBirth").datepicker({
                maxDate: new Date(),
                beforeShow: function (input, inst) {
                    // Handle calendar position before showing it.
                    // It's not supported by Datepicker itself (for now) so we need to use its internal variables.
                    var calendar = inst.dpDiv;

                    // Dirty hack, but we can't do anything without it (for now, in jQuery UI 1.8.20)
                    setTimeout(function () {
                        calendar.position({
                            my: 'right top',
                            at: 'right bottom',
                            collision: 'none',
                            of: input
                        });
                    }, 1);
                }
            });


        });
    </script>
}