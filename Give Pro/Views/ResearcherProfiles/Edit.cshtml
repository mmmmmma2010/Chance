@model Give_Pro.Models.ResearcherProfile

@{
    ViewBag.Title = "التعديل";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<h2 style="margin:0 50px 50px 0px">التعديل</h2>

@using (Html.BeginForm("Edit", "ResearcherProfiles", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="alert alert-danger" id="error-div" style="display:none">
            <span id="View-err">

            </span>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.UserID)
        @Html.HiddenFor(model => model.FileCV)

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberCard, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberCard, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.NumberCard, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateEnd, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateEnd, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.DateEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateBirth, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateBirth, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.DateBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AgeID, "السن", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("AgeID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.AgeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NationalitiesID, "الجنسيه", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("NationalitiesID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.NationalitiesID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GenderID, "النوع", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("GenderID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.GenderID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberPhone, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberPhone, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.NumberPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountriesID, "الدولة", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">

                @Html.DropDownListFor(m => m.CountriesID, ViewBag.CountriesID as SelectList, "-- برجاء اختيار الدولة --", new { @class = "form-control", @style = "margin-bottom:20px" })

                @Html.ValidationMessageFor(model => model.CountriesID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GovernoratesID, "المحافظه", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.GovernoratesID, new SelectList(""), "-- برجاء اختيار المحافظه --", new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.GovernoratesID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CitiesID, "المدينة", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.CitiesID, new SelectList(""), "-- برجاء اختيار المدينة --", new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.CitiesID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressDetails, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddressDetails, new { htmlAttributes = new { @class = "form-control", @style = "margin-bottom:20px" } })
                @Html.ValidationMessageFor(model => model.AddressDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DrivingLicenseID, "رخصة القياده", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("DrivingLicenseID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.DrivingLicenseID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EducationLevelID, "المؤهل التعليمي", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("EducationLevelID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.EducationLevelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LevelEnglishID, "اللغه الإنجليزيه", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("LevelEnglishID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.LevelEnglishID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LevelComputerID, "الحاسب الآلي", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("LevelComputerID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.LevelComputerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LevelOfficeID, "مايكروسوفت أوفيس", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("LevelOfficeID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.LevelOfficeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LevelArmyID, "الموقف من التجنيد", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("LevelArmyID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.LevelArmyID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyActivityID, "المجال الوظيفي", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("CompanyActivityID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.CompanyActivityID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YearsExperienceID, "سنوات الخبره", htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.DropDownList("YearsExperienceID", null, htmlAttributes: new { @class = "form-control", @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.YearsExperienceID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FileCV, htmlAttributes: new { @class = "control-label col-md-2", @style = " text-align:right" })
            <div class="col-md-3">
                <input type="file" name="uploadCV" id="CV" />
                @Html.ValidationMessageFor(model => model.FileCV, "", new { @class = "text-danger" })
            </div>
            @Html.ActionLink("استعراض السيرة الحالية", "GetCV", new { fileName = Model.FileCV }, htmlAttributes: new { @class = "btn btn-primary col-md-3" })

        </div>
        <div class="row" style="width:100%; height:20px"> </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2", @style = "padding-top:15px; text-align:right" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password", Type = "password", id = "Password" }, @style = "margin-bottom:20px" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="تعديل" class="btn btn-primary"  id="Save"/>
            </div>
        </div>
    </div>
}

<div class="row" style="width:100% ;height:75%">
    <a href="#" style="color:white">.</a>
</div>

@section scripts{
    <script>

        $(function () {
            $("#Save").click(function () {
                /* نتحقق من ان الصورة فارغه */
                if ($("#Password").val() == "") {
                    $("#error-div").fadeIn();
                    $("#View-err").append("  (برجاء ادخال كلمة السر)");
                    return false;
                }

            });
        });

        $(function () {
            $("#Save").click(function () {
                if ($("#JobImage").val() != "") {

                    /* نحقق من ان اتمداد الصورة انه سليم */
                    var filename = document.getElementById("JobImage").value; // جلب امتداد الصورة كامل //
                    var extensionImg = filename.substr(filename.lastIndexOf('.') + 1); //تقطيع الامتداد من عند النقطه بدون النقطه
                    var validExtensions = ['jpg', 'png', 'gif', 'bmp'];
                    if ($.inArray(extensionImg, validExtensions) == -1) {
                        $("#error-div").fadeIn();
                        $("#View-err1").append(" (رجاء قم بـ أختيار صورة بـ امتداد صحيح)  ");
                        return false;
                    }
                    /* التحكم ف حجم الصورة لا يزيد (2ميجا) فقط لا غير */
                    var myFileSize = document.getElementById("JobImage").files[0].size / 1024 / 1024; // جلب حجم الصورة ب المجيا بايت //
                    if (myFileSize > 2) {
                        $("#error-div").fadeIn();
                        $("#View-err1").append("  (رجاء قم بـ إختيار صورة حجمها أقل من 2 ميجا بايت ) ");
                        return false;
                    }
                }
            });
        });
        $(function () {
            $("#Save").click(function () {
                if ($("#CV").val() != "") {

                    /* نحقق من ان اتمداد الصورة انه سليم */
                    var filename = document.getElementById("CV").value; // جلب امتداد الصورة كامل //
                    var extensionImg = filename.substr(filename.lastIndexOf('.') + 1); //تقطيع الامتداد من عند النقطه بدون النقطه
                    var validExtensions = ['pdf'];
                    if ($.inArray(extensionImg, validExtensions) == -1) {
                        $("#error-div").fadeIn();
                        $("#View-err").append("رجاء قم بـ أختيار ملف بـ امتداد صحيح ");
                        return false;
                    }
                    /* التحكم ف حجم الصورة لا يزيد (2ميجا) فقط لا غير */
                    var myFileSize = document.getElementById("CV").files[0].size / 1024 / 1024; // جلب حجم الصورة ب المجيا بايت //
                    if (myFileSize > 10) {
                        $("#error-div").fadeIn();
                        $("#View-err").append("رجاء قم بـ إختيار ملف حجمه أقل من 10 ميجا بايت ");
                        return false;
                    }
                }
            });
        });
    </script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script>
            $(document).ready(function () {
                $("#CountriesID").change(function () {
                    var countryId = $(this).val();
                    debugger
                    $.ajax({
                        type: "post",
                        url: "/Jobs/GetGovernorates?id=" + countryId,
                        contentType: "html",
                        success: function (response) {
                            debugger
                            $("#GovernoratesID").empty();
                            $("#GovernoratesID").append(response);
                        }
                    });
                });
                $("#GovernoratesID").change(function () {
                    var cityId = $(this).val();
                    debugger
                    $.ajax({
                        type: "post",
                        url: "/Jobs/GetCities?id=" + cityId,
                        contentType: "html",
                        success: function (response) {
                            debugger
                            $("#CitiesID").empty();
                            $("#CitiesID").append(response);
                        }
                    });
                });
            });
    </script>
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

    <script src="~/Scripts/jquery-1.12.4.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script>
            /////////////////////////////// خاصة بتاريخ الانشاء //////////////////////////////////////////
            $(document).ready(function () {

                $("#DateEnd").datepicker({
                    maxDate: new Date(),
                    beforeShow: function (input, inst) {
                        // Handle calendar position before showing it.
                        // It's not supported by Datepicker itself (for now) so we need to use its internal variables.
                        var calendar = inst.dpDiv;

                        // Dirty hack, but we can't do anything without it (for now, in jQuery UI 1.8.20)
                        setTimeout(function () {
                            calendar.position({
                                my: 'right top',
                                at: 'right bottom',
                                collision: 'none',
                                of: input
                            });
                        }, 1);
                    }
                });
                $("#DateBirth").datepicker({
                    maxDate: new Date(),
                    beforeShow: function (input, inst) {
                        // Handle calendar position before showing it.
                        // It's not supported by Datepicker itself (for now) so we need to use its internal variables.
                        var calendar = inst.dpDiv;

                        // Dirty hack, but we can't do anything without it (for now, in jQuery UI 1.8.20)
                        setTimeout(function () {
                            calendar.position({
                                my: 'right top',
                                at: 'right bottom',
                                collision: 'none',
                                of: input
                            });
                        }, 1);
                    }
                });


            });
    </script>
}
